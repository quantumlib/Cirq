"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Packed arrays store n-dimensional, homogeneous numeric data in a serialized
byte array, along with their shape and endianness. Their performance is
competitive with labrad and flatbuffer serialization/deserialization due to
the reduced scope of functionality (i.e. just arrays).

Each packed type has:
 - shape: a list of integers that mimic numpy's shape parameter. That is,
   each element represents the length of a dimension. A 2-D n x m array would
   have the shape [n, m].
 - endianness: The endianness of encoding; client libraries are responsible
   for correcting mismatched endianness. We highly recommend client
   libraries to stick with consistent and, preferably, system-native
   endianness. Note that unspecified endianness defaults to little endian;
   this approximately reflects how protobufs are serialized on the wire.

Note that different types are used to enforce typing in downstream data
data sources without inspecting the proto data.  (For instance, enforcing
that a field stored as a proto is Complex128 requires only checking message
type and not the data.)
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Endianness:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EndiannessEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Endianness.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    LITTLE_ENDIAN: _Endianness.ValueType  # 0
    BIG_ENDIAN: _Endianness.ValueType  # 1

class Endianness(_Endianness, metaclass=_EndiannessEnumTypeWrapper): ...

LITTLE_ENDIAN: Endianness.ValueType  # 0
BIG_ENDIAN: Endianness.ValueType  # 1
global___Endianness = Endianness

@typing.final
class Complex128Array(google.protobuf.message.Message):
    """
    Array of interleaved (real, imaginary) pairs, each of which are 64-bit floats.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Complex128Array = Complex128Array

@typing.final
class Complex64Array(google.protobuf.message.Message):
    """
    Array of interleaved (real, imaginary) pairs, each of which are 32-bit floats.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Complex64Array = Complex64Array

@typing.final
class Float16Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Float16Array = Float16Array

@typing.final
class Float32Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Float32Array = Float32Array

@typing.final
class Float64Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Float64Array = Float64Array

@typing.final
class Int64Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Int64Array = Int64Array

@typing.final
class Int32Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Int32Array = Int32Array

@typing.final
class Int16Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    ENDIANNESS_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    endianness: global___Endianness.ValueType
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        endianness: global___Endianness.ValueType = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "endianness", b"endianness", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Int16Array = Int16Array

@typing.final
class Int8Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___Int8Array = Int8Array

@typing.final
class UInt8Array(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___UInt8Array = UInt8Array

@typing.final
class BitArray(google.protobuf.message.Message):
    """
    BitArrays represent arbitrary shape bit arrays.

    They are packed into bytes, in big-endian bit order and therefore will
    consume ceil(product(shape) / 8) bytes.

    For example, say we have an array:
       array = [0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0]
       Where array[0] == 0, array[1] == 1, array[2] == 1, etc.

    It will get mapped into bytes as follows:
       0  1  1  0  1  0  0  0 : 1  0  1  0
      [       byte 0          |        byte 1         ]
       7  6  5  4  3  2  1  0 : 7  6  5  4  3  2  1  0     <-- bit index in byte
                                            ^^^^^^^^^^^
                                            unused bits will be zeroed out
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHAPE_FIELD_NUMBER: builtins.int
    FLAT_BYTES_FIELD_NUMBER: builtins.int
    flat_bytes: builtins.bytes
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        shape: collections.abc.Iterable[builtins.int] | None = ...,
        flat_bytes: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["data", b"data", "flat_bytes", b"flat_bytes", "shape", b"shape"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["data", b"data"]) -> typing.Literal["flat_bytes"] | None: ...

global___BitArray = BitArray

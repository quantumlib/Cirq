"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class MetricsSnapshot(google.protobuf.message.Message):
    """A snapshot of the performance metrics for a quantum processor at a
    particular time.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIMESTAMP_MS_FIELD_NUMBER: builtins.int
    METRICS_FIELD_NUMBER: builtins.int
    timestamp_ms: builtins.int
    """The time the metrics were collected, in unix time (milliseconds since
    Epoch minus leap seconds). Metric collection take time, so this is the
    time at which all of the metrics have been collected.
    """
    @property
    def metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Metric]:
        """All of the metrics collected during this snapshot."""
    def __init__(
        self,
        *,
        timestamp_ms: builtins.int = ...,
        metrics: collections.abc.Iterable[global___Metric] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metrics", b"metrics", "timestamp_ms", b"timestamp_ms"]) -> None: ...

global___MetricsSnapshot = MetricsSnapshot

@typing_extensions.final
class Metric(google.protobuf.message.Message):
    """The actual metrics."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    TARGETS_FIELD_NUMBER: builtins.int
    VALUES_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the metric. This is the type of metric, i.e. 't1' or
    'randomized_benchmarking'.
    """
    @property
    def targets(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """The targets of the metrics. Targets include things like the qubits (i.e.
        strings like `q0_1`), but may also be empty when the metric applies
        globally.
        """
    @property
    def values(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Value]:
        """The values of this Metrics. Repeated to support multivalued metrics like
        tomography.
        """
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        targets: collections.abc.Iterable[builtins.str] | None = ...,
        values: collections.abc.Iterable[global___Value] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "targets", b"targets", "values", b"values"]) -> None: ...

global___Metric = Metric

@typing_extensions.final
class Value(google.protobuf.message.Message):
    """A generic metric value."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DOUBLE_VAL_FIELD_NUMBER: builtins.int
    INT32_VAL_FIELD_NUMBER: builtins.int
    INT64_VAL_FIELD_NUMBER: builtins.int
    STR_VAL_FIELD_NUMBER: builtins.int
    double_val: builtins.float
    int32_val: builtins.int
    int64_val: builtins.int
    str_val: builtins.str
    def __init__(
        self,
        *,
        double_val: builtins.float = ...,
        int32_val: builtins.int = ...,
        int64_val: builtins.int = ...,
        str_val: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["double_val", b"double_val", "int32_val", b"int32_val", "int64_val", b"int64_val", "str_val", b"str_val", "val", b"val"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["double_val", b"double_val", "int32_val", b"int32_val", "int64_val", b"int64_val", "str_val", b"str_val", "val", b"val"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["val", b"val"]) -> typing_extensions.Literal["double_val", "int32_val", "int64_val", "str_val"] | None: ...

global___Value = Value
